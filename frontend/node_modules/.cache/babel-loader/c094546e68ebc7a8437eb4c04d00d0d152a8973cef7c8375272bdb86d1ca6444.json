{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90538\\\\Desktop\\\\spring-react-course\\\\frontend\\\\src\\\\shared\\\\ApiProgress.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useApiProgress = apiPath => {\n  _s();\n  const [pendingApiCall, setPendingAPiCall] = useState(false);\n  useEffect(() => {\n    const registerInterceptors = () => {\n      let requestInterceptor = axios.interceptors.request.use(request => {\n        if (request.url.startsWith(apiPath)) {\n          setPendingAPiCall(true);\n        }\n        return request;\n      });\n      let responseInterceptor = axios.interceptors.response.use(response => {\n        if (response.config.url.startsWith(apiPath)) {\n          setPendingAPiCall(false);\n        }\n        return response;\n      }, error => {\n        if (error.config.url.startsWith(apiPath)) {\n          setPendingAPiCall(false);\n        }\n        throw error;\n      });\n    };\n    registerInterceptors();\n    const unregisterInterceptors = () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n    return function unmount() {\n      unregisterInterceptors();\n    };\n  });\n  return pendingApiCall;\n};\n_s(useApiProgress, \"ZDnE0aOwtOAMgx6SyS5Ap6+RVUM=\");\nexport function withApiProgress(WrappedComponent, apiPath) {\n  return class extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        pendingApiCall: false\n      };\n      this.registerInterceptors = () => {\n        this.requestInterceptor = axios.interceptors.request.use(request => {\n          if (request.url.startsWith(apiPath)) {\n            this.setState({\n              pendingApiCall: true\n            });\n          }\n          return request;\n        });\n        this.responseInterceptor = axios.interceptors.response.use(response => {\n          if (response.config.url.startsWith(apiPath)) {\n            this.setState({\n              pendingApiCall: false\n            });\n          }\n          return response;\n        }, error => {\n          if (error.config.url.startsWith(apiPath)) {\n            this.setState({\n              pendingApiCall: false\n            });\n          }\n          throw error;\n        });\n      };\n      this.unregisterInterceptors = () => {\n        axios.interceptors.request.eject(this.requestInterceptor);\n        axios.interceptors.response.eject(this.responseInterceptor);\n      };\n    }\n    componentDidMount() {\n      this.registerInterceptors();\n    }\n    componentWillUnmount() {\n      this.unregisterInterceptors();\n    }\n    render() {\n      //return <div>{React.cloneElement(this.props.children, {pendingApiCall: this.state.pendingApiCall})}</div>\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        pendingApiCall: this.state.pendingApiCall,\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }, this);\n    }\n  };\n}","map":{"version":3,"names":["React","Component","useEffect","axios","jsxDEV","_jsxDEV","useApiProgress","apiPath","_s","pendingApiCall","setPendingAPiCall","useState","registerInterceptors","requestInterceptor","interceptors","request","use","url","startsWith","responseInterceptor","response","config","error","unregisterInterceptors","eject","unmount","withApiProgress","WrappedComponent","constructor","arguments","state","setState","componentDidMount","componentWillUnmount","render","props","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/90538/Desktop/spring-react-course/frontend/src/shared/ApiProgress.js"],"sourcesContent":["import React, { Component, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useApiProgress = (apiPath) => {\r\n    const [pendingApiCall, setPendingAPiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const registerInterceptors = () => {\r\n            let requestInterceptor = axios.interceptors.request.use((request) => {\r\n                if(request.url.startsWith(apiPath)){\r\n                    setPendingAPiCall(true);\r\n                }\r\n                return request;\r\n            })\r\n    \r\n            let responseInterceptor = axios.interceptors.response.use((response) => {\r\n                if(response.config.url.startsWith(apiPath)){\r\n                    setPendingAPiCall(false);\r\n\r\n                }\r\n                return response;\r\n            }, (error) => {\r\n    \r\n                if(error.config.url.startsWith(apiPath)){\r\n                    setPendingAPiCall(false);\r\n\r\n                }\r\n                throw error;\r\n            })\r\n        }\r\n\r\n        registerInterceptors();\r\n\r\n        \r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n            \r\n        }\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    })\r\n\r\n    return pendingApiCall;\r\n}\r\n\r\nexport function withApiProgress(WrappedComponent,apiPath){\r\n    return class extends Component {\r\n  \r\n        state = {\r\n            pendingApiCall: false\r\n        }\r\n      \r\n        registerInterceptors = () => {\r\n            this.requestInterceptor = axios.interceptors.request.use((request) => {\r\n                if(request.url.startsWith(apiPath)){\r\n                    this.setState({\r\n                        pendingApiCall: true\r\n                    })\r\n                }\r\n                return request;\r\n            })\r\n    \r\n            this.responseInterceptor = axios.interceptors.response.use((response) => {\r\n                if(response.config.url.startsWith(apiPath)){\r\n                    this.setState({\r\n                        pendingApiCall: false\r\n                    })\r\n                }\r\n                return response;\r\n            }, (error) => {\r\n    \r\n                if(error.config.url.startsWith(apiPath)){\r\n                    this.setState({\r\n                        pendingApiCall: false\r\n                    })\r\n                }\r\n                throw error;\r\n            })\r\n        }\r\n\r\n        unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n            \r\n        }\r\n\r\n        componentDidMount(){\r\n            this.registerInterceptors();\r\n        }\r\n    \r\n        componentWillUnmount(){\r\n            this.unregisterInterceptors();\r\n        }\r\n\r\n        render() {\r\n        //return <div>{React.cloneElement(this.props.children, {pendingApiCall: this.state.pendingApiCall})}</div>\r\n        return <WrappedComponent pendingApiCall={this.state.pendingApiCall} {...this.props} />\r\n    }\r\n    } \r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}