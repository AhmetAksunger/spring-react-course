{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90538\\\\Desktop\\\\spring-react-course\\\\frontend\\\\src\\\\shared\\\\ApiProgress.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useApiProgress = (apiMethod, apiPath) => {\n  _s();\n  const [pendingApiCall, setPendingAPiCall] = useState(false);\n  useEffect(() => {\n    let requestInterceptor,\n      responseInterceptor = undefined;\n    const registerInterceptors = () => {\n      requestInterceptor = axios.interceptors.request.use(request => {\n        if (request.url.startsWith(apiPath) && request.method === apiMethod) {\n          setPendingAPiCall(true);\n        }\n        return request;\n      });\n      responseInterceptor = axios.interceptors.response.use(response => {\n        if (response.config.url.startsWith(apiPath) && response.config.method === apiMethod) {\n          setPendingAPiCall(false);\n        }\n        return response;\n      }, error => {\n        if (error.config.url.startsWith(apiPath)) {\n          setPendingAPiCall(false);\n        }\n        throw error;\n      });\n    };\n    registerInterceptors();\n    const unregisterInterceptors = () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n    return function unmount() {\n      unregisterInterceptors();\n    };\n  }, [apiPath]);\n  return pendingApiCall;\n};\n_s(useApiProgress, \"ZDnE0aOwtOAMgx6SyS5Ap6+RVUM=\");\nexport function withApiProgress(WrappedComponent, apiPath) {\n  return class extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        pendingApiCall: false\n      };\n      this.registerInterceptors = () => {\n        this.requestInterceptor = axios.interceptors.request.use(request => {\n          if (request.url.startsWith(apiPath)) {\n            this.setState({\n              pendingApiCall: true\n            });\n          }\n          return request;\n        });\n        this.responseInterceptor = axios.interceptors.response.use(response => {\n          if (response.config.url.startsWith(apiPath)) {\n            this.setState({\n              pendingApiCall: false\n            });\n          }\n          return response;\n        }, error => {\n          if (error.config.url.startsWith(apiPath)) {\n            this.setState({\n              pendingApiCall: false\n            });\n          }\n          throw error;\n        });\n      };\n      this.unregisterInterceptors = () => {\n        axios.interceptors.request.eject(this.requestInterceptor);\n        axios.interceptors.response.eject(this.responseInterceptor);\n      };\n    }\n    componentDidMount() {\n      this.registerInterceptors();\n    }\n    componentWillUnmount() {\n      this.unregisterInterceptors();\n    }\n    render() {\n      //return <div>{React.cloneElement(this.props.children, {pendingApiCall: this.state.pendingApiCall})}</div>\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        pendingApiCall: this.state.pendingApiCall,\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 16\n      }, this);\n    }\n  };\n}","map":{"version":3,"names":["React","Component","useEffect","useState","axios","jsxDEV","_jsxDEV","useApiProgress","apiMethod","apiPath","_s","pendingApiCall","setPendingAPiCall","requestInterceptor","responseInterceptor","undefined","registerInterceptors","interceptors","request","use","url","startsWith","method","response","config","error","unregisterInterceptors","eject","unmount","withApiProgress","WrappedComponent","constructor","arguments","state","setState","componentDidMount","componentWillUnmount","render","props","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/90538/Desktop/spring-react-course/frontend/src/shared/ApiProgress.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useApiProgress = (apiMethod, apiPath) => {\r\n    const [pendingApiCall, setPendingAPiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor,responseInterceptor = undefined;\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                if(request.url.startsWith(apiPath) && request.method === apiMethod ){\r\n                    setPendingAPiCall(true);\r\n                }\r\n                return request;\r\n            })\r\n    \r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                if(response.config.url.startsWith(apiPath) && response.config.method === apiMethod){\r\n                    setPendingAPiCall(false);\r\n\r\n                }\r\n                return response;\r\n            }, (error) => {\r\n    \r\n                if(error.config.url.startsWith(apiPath)){\r\n                    setPendingAPiCall(false);\r\n\r\n                }\r\n                throw error;\r\n            })\r\n        }\r\n\r\n        registerInterceptors();\r\n\r\n        \r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n            \r\n        }\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    },[apiPath])\r\n\r\n    return pendingApiCall;\r\n}\r\n\r\nexport function withApiProgress(WrappedComponent,apiPath){\r\n    return class extends Component {\r\n  \r\n        state = {\r\n            pendingApiCall: false\r\n        }\r\n      \r\n        registerInterceptors = () => {\r\n            this.requestInterceptor = axios.interceptors.request.use((request) => {\r\n                if(request.url.startsWith(apiPath)){\r\n                    this.setState({\r\n                        pendingApiCall: true\r\n                    })\r\n                }\r\n                return request;\r\n            })\r\n    \r\n            this.responseInterceptor = axios.interceptors.response.use((response) => {\r\n                if(response.config.url.startsWith(apiPath)){\r\n                    this.setState({\r\n                        pendingApiCall: false\r\n                    })\r\n                }\r\n                return response;\r\n            }, (error) => {\r\n    \r\n                if(error.config.url.startsWith(apiPath)){\r\n                    this.setState({\r\n                        pendingApiCall: false\r\n                    })\r\n                }\r\n                throw error;\r\n            })\r\n        }\r\n\r\n        unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n            \r\n        }\r\n\r\n        componentDidMount(){\r\n            this.registerInterceptors();\r\n        }\r\n    \r\n        componentWillUnmount(){\r\n            this.unregisterInterceptors();\r\n        }\r\n\r\n        render() {\r\n        //return <div>{React.cloneElement(this.props.children, {pendingApiCall: this.state.pendingApiCall})}</div>\r\n        return <WrappedComponent pendingApiCall={this.state.pendingApiCall} {...this.props} />\r\n    }\r\n    } \r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}