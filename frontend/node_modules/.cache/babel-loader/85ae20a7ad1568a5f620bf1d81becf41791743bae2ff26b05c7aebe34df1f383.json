{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90538\\\\Desktop\\\\spring-react-course\\\\frontend\\\\src\\\\shared\\\\ApiProgress.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useApiProgress = function (apiMethod, apiPath) {\n  _s();\n  let strictPath = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  const [pendingApiCall, setPendingAPiCall] = useState(false);\n  useEffect(() => {\n    let requestInterceptor,\n      responseInterceptor = undefined;\n    const registerInterceptors = () => {\n      requestInterceptor = axios.interceptors.request.use(request => {\n        if (request.method !== apiMethod) {\n          return;\n        }\n        if (strictPath && request.url === apiPath) {\n          setPendingAPiCall(true);\n        } else if (!strictPath && request.url.startsWith(apiPath)) {\n          setPendingAPiCall(true);\n        }\n        return request;\n      });\n      responseInterceptor = axios.interceptors.response.use(response => {\n        if (response.config.method !== apiMethod) {\n          return;\n        }\n        if (strictPath && response.config.url === apiPath) {\n          setPendingAPiCall(false);\n        } else if (!strictPath && response.config.url.startsWith(apiPath)) {\n          setPendingAPiCall(false);\n        }\n        return response;\n      }, error => {\n        if (error.config.url.startsWith(apiPath)) {\n          setPendingAPiCall(false);\n        }\n        throw error;\n      });\n    };\n    registerInterceptors();\n    const unregisterInterceptors = () => {\n      axios.interceptors.request.eject(requestInterceptor);\n      axios.interceptors.response.eject(responseInterceptor);\n    };\n    return function unmount() {\n      unregisterInterceptors();\n    };\n  }, [apiPath, apiMethod]);\n  return pendingApiCall;\n};\n_s(useApiProgress, \"ZDnE0aOwtOAMgx6SyS5Ap6+RVUM=\");\nexport function withApiProgress(WrappedComponent, apiMethod, apiPath) {\n  return class extends Component {\n    constructor() {\n      super(...arguments);\n      this.state = {\n        pendingApiCall: false\n      };\n      this.registerInterceptors = () => {\n        this.requestInterceptor = axios.interceptors.request.use(request => {\n          if (request.url.startsWith(apiPath) && request.method === apiMethod) {\n            this.setState({\n              pendingApiCall: true\n            });\n          }\n          return request;\n        });\n        this.responseInterceptor = axios.interceptors.response.use(response => {\n          if (response.config.url.startsWith(apiPath) && response.config.method === apiMethod) {\n            this.setState({\n              pendingApiCall: false\n            });\n          }\n          return response;\n        }, error => {\n          if (error.config.url.startsWith(apiPath)) {\n            this.setState({\n              pendingApiCall: false\n            });\n          }\n          throw error;\n        });\n      };\n      this.unregisterInterceptors = () => {\n        axios.interceptors.request.eject(this.requestInterceptor);\n        axios.interceptors.response.eject(this.responseInterceptor);\n      };\n    }\n    componentDidMount() {\n      this.registerInterceptors();\n    }\n    componentWillUnmount() {\n      this.unregisterInterceptors();\n    }\n    render() {\n      //return <div>{React.cloneElement(this.props.children, {pendingApiCall: this.state.pendingApiCall})}</div>\n      return /*#__PURE__*/_jsxDEV(WrappedComponent, {\n        pendingApiCall: this.state.pendingApiCall,\n        ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this);\n    }\n  };\n}","map":{"version":3,"names":["React","Component","useEffect","useState","axios","jsxDEV","_jsxDEV","useApiProgress","apiMethod","apiPath","_s","strictPath","arguments","length","undefined","pendingApiCall","setPendingAPiCall","requestInterceptor","responseInterceptor","registerInterceptors","interceptors","request","use","method","url","startsWith","response","config","error","unregisterInterceptors","eject","unmount","withApiProgress","WrappedComponent","constructor","state","setState","componentDidMount","componentWillUnmount","render","props","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/90538/Desktop/spring-react-course/frontend/src/shared/ApiProgress.js"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useApiProgress = (apiMethod, apiPath, strictPath = false) => {\r\n    const [pendingApiCall, setPendingAPiCall] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let requestInterceptor,responseInterceptor = undefined;\r\n        const registerInterceptors = () => {\r\n            requestInterceptor = axios.interceptors.request.use((request) => {\r\n                if(request.method !== apiMethod){\r\n                    return;\r\n                }\r\n                if(strictPath && request.url === apiPath){\r\n                    setPendingAPiCall(true);\r\n                }\r\n                else if(!strictPath && request.url.startsWith(apiPath)){\r\n                    setPendingAPiCall(true);\r\n                }\r\n                return request;\r\n            })\r\n    \r\n            responseInterceptor = axios.interceptors.response.use((response) => {\r\n                if(response.config.method !== apiMethod){\r\n                    return;\r\n                }\r\n                if(strictPath && response.config.url === apiPath){\r\n                    setPendingAPiCall(false);\r\n                }\r\n                else if(!strictPath && response.config.url.startsWith(apiPath)){\r\n                    setPendingAPiCall(false);\r\n                }\r\n                return response;\r\n            }, (error) => {\r\n    \r\n                if(error.config.url.startsWith(apiPath)){\r\n                    setPendingAPiCall(false);\r\n\r\n                }\r\n                throw error;\r\n            })\r\n        }\r\n\r\n        registerInterceptors();\r\n\r\n        \r\n        const unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(requestInterceptor);\r\n            axios.interceptors.response.eject(responseInterceptor);\r\n            \r\n        }\r\n\r\n        return function unmount() {\r\n            unregisterInterceptors();\r\n        }\r\n    },[apiPath, apiMethod])\r\n\r\n    return pendingApiCall;\r\n}\r\n\r\nexport function withApiProgress(WrappedComponent,apiMethod,apiPath){\r\n    return class extends Component {\r\n  \r\n        state = {\r\n            pendingApiCall: false\r\n        }\r\n      \r\n        registerInterceptors = () => {\r\n            this.requestInterceptor = axios.interceptors.request.use((request) => {\r\n                if(request.url.startsWith(apiPath) && request.method === apiMethod){\r\n                    this.setState({\r\n                        pendingApiCall: true\r\n                    })\r\n                }\r\n                return request;\r\n            })\r\n    \r\n            this.responseInterceptor = axios.interceptors.response.use((response) => {\r\n                if(response.config.url.startsWith(apiPath) && response.config.method === apiMethod){\r\n                    this.setState({\r\n                        pendingApiCall: false\r\n                    })\r\n                }\r\n                return response;\r\n            }, (error) => {\r\n    \r\n                if(error.config.url.startsWith(apiPath)){\r\n                    this.setState({\r\n                        pendingApiCall: false\r\n                    })\r\n                }\r\n                throw error;\r\n            })\r\n        }\r\n\r\n        unregisterInterceptors = () => {\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n            \r\n        }\r\n\r\n        componentDidMount(){\r\n            this.registerInterceptors();\r\n        }\r\n    \r\n        componentWillUnmount(){\r\n            this.unregisterInterceptors();\r\n        }\r\n\r\n        render() {\r\n        //return <div>{React.cloneElement(this.props.children, {pendingApiCall: this.state.pendingApiCall})}</div>\r\n        return <WrappedComponent pendingApiCall={this.state.pendingApiCall} {...this.props} />\r\n    }\r\n    } \r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}