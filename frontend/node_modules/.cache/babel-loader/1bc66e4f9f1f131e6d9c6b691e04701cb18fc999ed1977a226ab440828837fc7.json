{"ast":null,"code":"import { legacy_createStore as createStore } from 'redux';\nimport authReducer from './authReducer';\nimport SecureLS from 'secure-ls';\nconst secureLS = new SecureLS();\nconst getStateFromStorage = () => {\n  const localAuthData = secureLS.get(\"auth\");\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: null,\n    displayName: null,\n    image: null,\n    password: null\n  };\n  if (localAuthData) {\n    return localAuthData;\n  }\n};\nconst updateStateInStorage = newState => {\n  secureLS.set(\"auth\", newState);\n};\nconst configureStore = () => {\n  const stateInLocalStorage = getStateFromStorage();\n  const store = createStore(authReducer, stateInLocalStorage, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n  // each time the state changes, this method will run\n  store.subscribe(() => {\n    updateStateInStorage(store.getState());\n  });\n  return store;\n};\nexport default configureStore;","map":{"version":3,"names":["legacy_createStore","createStore","authReducer","SecureLS","secureLS","getStateFromStorage","localAuthData","get","stateInLocalStorage","isLoggedIn","username","displayName","image","password","updateStateInStorage","newState","set","configureStore","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState"],"sources":["C:/Users/90538/Desktop/spring-react-course/frontend/src/redux/configureStore.js"],"sourcesContent":["import { legacy_createStore as createStore } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\n\r\nconst secureLS = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n\r\n  const localAuthData = secureLS.get(\"auth\");\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: null,\r\n    displayName: null,\r\n    image: null,\r\n    password: null\r\n  }\r\n\r\n  if(localAuthData){\r\n    return localAuthData;\r\n  }\r\n}\r\n\r\nconst updateStateInStorage = (newState) => {\r\n\r\n  secureLS.set(\"auth\",newState);\r\n\r\n}\r\n  \r\nconst configureStore = () => {\r\n\r\n  const stateInLocalStorage = getStateFromStorage();\r\n\r\n  const store = createStore(authReducer, stateInLocalStorage,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());  \r\n\r\n  // each time the state changes, this method will run\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n  })\r\n\r\n  return store; \r\n}\r\n\r\nexport default configureStore;"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAEhC,MAAMC,QAAQ,GAAG,IAAID,QAAQ,CAAC,CAAC;AAE/B,MAAME,mBAAmB,GAAGA,CAAA,KAAM;EAEhC,MAAMC,aAAa,GAAGF,QAAQ,CAACG,GAAG,CAAC,MAAM,CAAC;EAE1C,IAAIC,mBAAmB,GAAG;IACxBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAGP,aAAa,EAAC;IACf,OAAOA,aAAa;EACtB;AACF,CAAC;AAED,MAAMQ,oBAAoB,GAAIC,QAAQ,IAAK;EAEzCX,QAAQ,CAACY,GAAG,CAAC,MAAM,EAACD,QAAQ,CAAC;AAE/B,CAAC;AAED,MAAME,cAAc,GAAGA,CAAA,KAAM;EAE3B,MAAMT,mBAAmB,GAAGH,mBAAmB,CAAC,CAAC;EAEjD,MAAMa,KAAK,GAAGjB,WAAW,CAACC,WAAW,EAAEM,mBAAmB,EAACW,MAAM,CAACC,4BAA4B,IAAID,MAAM,CAACC,4BAA4B,CAAC,CAAC,CAAC;;EAExI;EACAF,KAAK,CAACG,SAAS,CAAC,MAAM;IACpBP,oBAAoB,CAACI,KAAK,CAACI,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,CAAC;EAEF,OAAOJ,KAAK;AACd,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}