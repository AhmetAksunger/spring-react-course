{"ast":null,"code":"import { legacy_createStore as createStore } from 'redux';\nimport authReducer from './authReducer';\nconst getStateFromStorage = () => {\n  const localAuthData = localStorage.getItem(\"auth\");\n  let stateInLocalStorage = {\n    isLoggedIn: false,\n    username: null,\n    displayName: null,\n    image: null,\n    password: null\n  };\n  if (localAuthData) {\n    stateInLocalStorage = JSON.parse(localAuthData);\n  }\n};\nconst configureStore = () => {\n  const stateInLocalStorage = getStateFromStorage();\n  const store = createStore(authReducer, stateInLocalStorage, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\n\n  // each time the state changes, this method will run\n  store.subscribe(() => {\n    localStorage.setItem(\"auth\", JSON.stringify(store.getState()));\n  });\n  return store;\n};\nexport default configureStore;","map":{"version":3,"names":["legacy_createStore","createStore","authReducer","getStateFromStorage","localAuthData","localStorage","getItem","stateInLocalStorage","isLoggedIn","username","displayName","image","password","JSON","parse","configureStore","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","setItem","stringify","getState"],"sources":["C:/Users/90538/Desktop/spring-react-course/frontend/src/redux/configureStore.js"],"sourcesContent":["import { legacy_createStore as createStore } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nconst getStateFromStorage = () => {\r\n\r\n  const localAuthData = localStorage.getItem(\"auth\");\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: null,\r\n    displayName: null,\r\n    image: null,\r\n    password: null\r\n  }\r\n\r\n  if(localAuthData){\r\n    stateInLocalStorage = JSON.parse(localAuthData);\r\n  }\r\n}\r\n  \r\nconst configureStore = () => {\r\n\r\n  const stateInLocalStorage = getStateFromStorage();\r\n\r\n  const store = createStore(authReducer, stateInLocalStorage,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());  \r\n\r\n  // each time the state changes, this method will run\r\n  store.subscribe(() => {\r\n    localStorage.setItem(\"auth\",JSON.stringify(store.getState()))\r\n  })\r\n\r\n  return store; \r\n}\r\n\r\nexport default configureStore;"],"mappings":"AAAA,SAASA,kBAAkB,IAAIC,WAAW,QAAQ,OAAO;AACzD,OAAOC,WAAW,MAAM,eAAe;AAEvC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAEhC,MAAMC,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAElD,IAAIC,mBAAmB,GAAG;IACxBC,UAAU,EAAE,KAAK;IACjBC,QAAQ,EAAE,IAAI;IACdC,WAAW,EAAE,IAAI;IACjBC,KAAK,EAAE,IAAI;IACXC,QAAQ,EAAE;EACZ,CAAC;EAED,IAAGR,aAAa,EAAC;IACfG,mBAAmB,GAAGM,IAAI,CAACC,KAAK,CAACV,aAAa,CAAC;EACjD;AACF,CAAC;AAED,MAAMW,cAAc,GAAGA,CAAA,KAAM;EAE3B,MAAMR,mBAAmB,GAAGJ,mBAAmB,CAAC,CAAC;EAEjD,MAAMa,KAAK,GAAGf,WAAW,CAACC,WAAW,EAAEK,mBAAmB,EAACU,MAAM,CAACC,4BAA4B,IAAID,MAAM,CAACC,4BAA4B,CAAC,CAAC,CAAC;;EAExI;EACAF,KAAK,CAACG,SAAS,CAAC,MAAM;IACpBd,YAAY,CAACe,OAAO,CAAC,MAAM,EAACP,IAAI,CAACQ,SAAS,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC/D,CAAC,CAAC;EAEF,OAAON,KAAK;AACd,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}