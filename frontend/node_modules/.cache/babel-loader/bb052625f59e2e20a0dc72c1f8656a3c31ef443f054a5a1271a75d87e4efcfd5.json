{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\90538\\\\Desktop\\\\spring-react-course\\\\frontend\\\\src\\\\components\\\\HoaxFeed.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getHoaxes, getNewHoaxesCount, getOldHoaxes } from '../api/apiCalls';\nimport HoaxListItem from './HoaxListItem';\nimport { useTranslation } from 'react-i18next';\nimport { useApiProgress } from '../shared/ApiProgress';\nimport ButtonWithProgress from './ButtonWithProgress';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HoaxFeed = () => {\n  _s();\n  const [page, setPage] = useState({\n    content: [],\n    size: 5,\n    number: 0,\n    totalPages: 0,\n    last: false\n  });\n  const [newHoaxesCount, setNewHoaxesCount] = useState(0);\n  let contentFirstElementId = 0;\n  if (page.content.length > 0) {\n    contentFirstElementId = page.content[0].id;\n  }\n  const {\n    t\n  } = useTranslation();\n  const pendingApiCall = useApiProgress(\"get\", `/api/1.0/hoaxes/${contentFirstElementId}`);\n  const pendingApiCallForNewHoaxes = useApiProgress(\"get\", \"/api/1.0/hoaxes/?page\");\n  console.log(pendingApiCallForNewHoaxes);\n  console.log(pendingApiCall);\n  useEffect(() => {\n    loadHoaxes();\n  }, []);\n  useEffect(() => {\n    let getCountLoop = setInterval(() => {\n      getCount();\n    }, 5000);\n    return () => {\n      clearInterval(getCountLoop);\n    };\n  }, [contentFirstElementId]);\n  const getCount = async () => {\n    try {\n      const response = await getNewHoaxesCount(contentFirstElementId);\n      setNewHoaxesCount(response.data.count);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const loadHoaxes = async sizeNumber => {\n    try {\n      const response = await getHoaxes(undefined, 0, sizeNumber);\n      setPage(response.data);\n    } catch (error) {}\n  };\n  const loadOldHoaxes = async function () {\n    let sizeNumber = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 5;\n    try {\n      const response = await getOldHoaxes(contentFirstElementId, page.number, sizeNumber);\n      setPage(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const onClickLoadOldHoaxes = () => {\n    getCount();\n    const nextHoaxes = page.size + 5;\n    //loadHoaxes(nextHoaxes);\n    loadOldHoaxes(nextHoaxes);\n  };\n  const onClickNewHoaxes = () => {\n    setNewHoaxesCount(0);\n    const sizeNumber = page.size + newHoaxesCount;\n    loadHoaxes(sizeNumber);\n  };\n  const {\n    content: hoaxes,\n    last\n  } = page;\n  if (hoaxes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-4\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"alert alert-secondary\",\n        children: t(\"There are no hoaxes\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [newHoaxesCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-secondary text-center mt-3\",\n      onClick: onClickNewHoaxes,\n      style: {\n        cursor: 'pointer'\n      },\n      children: [t(\"There are some new hoaxes\"), /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"ms-2 badge text-bg-secondary bg-danger\",\n        children: [\"  \", newHoaxesCount <= 9 ? newHoaxesCount : '9+']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), hoaxes.map((value, index) => {\n      const {\n        content: hoaxContent,\n        timeStamp,\n        user\n      } = value;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(HoaxListItem, {\n          content: hoaxContent,\n          timeStamp: timeStamp,\n          user: user\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-2\",\n      children: /*#__PURE__*/_jsxDEV(ButtonWithProgress, {\n        buttonText: t(\"Load Old Hoaxes\"),\n        className: \"btn btn-primary\",\n        onClickMethod: onClickLoadOldHoaxes,\n        pendingApiCall: pendingApiCall,\n        disabledStatement: pendingApiCall || last\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(HoaxFeed, \"7dz0d0fwdYI/pFktMoUqm/H2r/Q=\", false, function () {\n  return [useTranslation, useApiProgress, useApiProgress];\n});\n_c = HoaxFeed;\nexport default HoaxFeed;\nvar _c;\n$RefreshReg$(_c, \"HoaxFeed\");","map":{"version":3,"names":["React","useEffect","useState","getHoaxes","getNewHoaxesCount","getOldHoaxes","HoaxListItem","useTranslation","useApiProgress","ButtonWithProgress","jsxDEV","_jsxDEV","HoaxFeed","_s","page","setPage","content","size","number","totalPages","last","newHoaxesCount","setNewHoaxesCount","contentFirstElementId","length","id","t","pendingApiCall","pendingApiCallForNewHoaxes","console","log","loadHoaxes","getCountLoop","setInterval","getCount","clearInterval","response","data","count","error","sizeNumber","undefined","loadOldHoaxes","arguments","onClickLoadOldHoaxes","nextHoaxes","onClickNewHoaxes","hoaxes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","cursor","class","map","value","index","hoaxContent","timeStamp","user","buttonText","onClickMethod","disabledStatement","_c","$RefreshReg$"],"sources":["C:/Users/90538/Desktop/spring-react-course/frontend/src/components/HoaxFeed.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getHoaxes, getNewHoaxesCount, getOldHoaxes } from '../api/apiCalls';\r\nimport HoaxListItem from './HoaxListItem';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useApiProgress } from '../shared/ApiProgress';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nconst HoaxFeed = () => {\r\n\r\n    const [page,setPage] = useState({\r\n        content: [],\r\n        size: 5,\r\n        number: 0,\r\n        totalPages: 0,\r\n        last: false\r\n    });\r\n\r\n    const [newHoaxesCount, setNewHoaxesCount] = useState(0);\r\n\r\n    let contentFirstElementId = 0\r\n    if(page.content.length > 0){\r\n        contentFirstElementId = page.content[0].id\r\n    }\r\n\r\n    const {t} = useTranslation();\r\n    const pendingApiCall = useApiProgress(\"get\",`/api/1.0/hoaxes/${contentFirstElementId}`);\r\n    const pendingApiCallForNewHoaxes = useApiProgress(\"get\",\"/api/1.0/hoaxes/?page\");\r\n\r\n    console.log(pendingApiCallForNewHoaxes)\r\n    console.log(pendingApiCall)\r\n\r\n    useEffect(() => {\r\n        loadHoaxes();\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        let getCountLoop = setInterval(() => {\r\n            getCount()\r\n        }, 5000);\r\n\r\n        return () => {\r\n            clearInterval(getCountLoop)\r\n        }\r\n    },[contentFirstElementId])\r\n\r\n    const getCount = async () => {\r\n\r\n        try {\r\n            const response = await getNewHoaxesCount(contentFirstElementId);\r\n            setNewHoaxesCount(response.data.count);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    const loadHoaxes = async (sizeNumber) => {\r\n        \r\n        try {\r\n            const response = await getHoaxes(undefined,0,sizeNumber);\r\n            setPage(response.data);    \r\n        } catch (error) {\r\n            \r\n        }    \r\n    }\r\n\r\n    const loadOldHoaxes = async (sizeNumber = 5) => {\r\n        \r\n        try {\r\n            const response = await getOldHoaxes(contentFirstElementId,page.number,sizeNumber)\r\n            setPage(response.data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const onClickLoadOldHoaxes = () => {\r\n        getCount();\r\n        const nextHoaxes = page.size + 5;\r\n        //loadHoaxes(nextHoaxes);\r\n        loadOldHoaxes(nextHoaxes);\r\n    }\r\n\r\n    const onClickNewHoaxes = () => {\r\n        setNewHoaxesCount(0);\r\n        const sizeNumber = page.size + newHoaxesCount;\r\n        loadHoaxes(sizeNumber);\r\n    }\r\n\r\n    const {content: hoaxes, last} = page;\r\n\r\n    if(hoaxes.length === 0){\r\n        return(\r\n            <div className='text-center mt-4'>\r\n                <span className='alert alert-secondary'>{t(\"There are no hoaxes\")}</span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            {newHoaxesCount > 0 && \r\n            <div className='alert alert-secondary text-center mt-3' onClick={onClickNewHoaxes} style={{cursor: 'pointer'}}>\r\n                {t(\"There are some new hoaxes\")}\r\n                <span class=\"ms-2 badge text-bg-secondary bg-danger\">  {newHoaxesCount <= 9 ? newHoaxesCount : '9+'}</span>\r\n            </div>\r\n            }\r\n            {hoaxes.map((value,index) => {\r\n                const {content: hoaxContent, timeStamp, user} = value;\r\n                return (\r\n                    <div>\r\n                        <HoaxListItem key={index} content={hoaxContent} timeStamp={timeStamp} user={user}/>\r\n                    </div>\r\n                )\r\n            })}\r\n            <div className='text-center mt-2'>\r\n                <ButtonWithProgress buttonText={t(\"Load Old Hoaxes\")} className='btn btn-primary' onClickMethod={onClickLoadOldHoaxes} pendingApiCall={pendingApiCall} disabledStatement={pendingApiCall || last} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HoaxFeed;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}