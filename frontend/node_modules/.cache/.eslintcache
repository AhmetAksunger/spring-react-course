[{"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\index.js":"1","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\UserSignupPage.js":"3","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\api\\apiCalls.js":"4","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\input.js":"5","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\i18n.js":"6","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\UserLoginPage.js":"7","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\LanguageSelector.js":"8","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\ButtonWithProgress.js":"9","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\shared\\ApiProgress.js":"10","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\container\\App.js":"11","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\HomePage.js":"12","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\UserPage.js":"13","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\TopBar.js":"14","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\ProfileCard.js":"15","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\shared\\AuthenticationContext.js":"16","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\configureStore.js":"17","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\authReducer.js":"18","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\authActions.js":"19","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\Constants.js":"20","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\UserList.js":"21","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\UserListItem.js":"22","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\ProfileImageWithDefault.js":"23","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\Spinner.js":"24","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\DropdownMenu.js":"25","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxifySection.js":"26","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxFeed.js":"27","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxListItem.js":"28","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxFeedForProfile.js":"29"},{"size":838,"mtime":1683327782216,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1682959451412,"results":"32","hashOfConfig":"31"},{"size":4424,"mtime":1684410427530,"results":"33","hashOfConfig":"31"},{"size":1911,"mtime":1684695304623,"results":"34","hashOfConfig":"31"},{"size":559,"mtime":1683826506563,"results":"35","hashOfConfig":"31"},{"size":3434,"mtime":1684705672735,"results":"36","hashOfConfig":"31"},{"size":3408,"mtime":1683830982900,"results":"37","hashOfConfig":"31"},{"size":1064,"mtime":1683578818946,"results":"38","hashOfConfig":"31"},{"size":600,"mtime":1683831961178,"results":"39","hashOfConfig":"31"},{"size":3605,"mtime":1684607079801,"results":"40","hashOfConfig":"31"},{"size":1162,"mtime":1683579047910,"results":"41","hashOfConfig":"31"},{"size":811,"mtime":1684518978613,"results":"42","hashOfConfig":"31"},{"size":1901,"mtime":1684606936888,"results":"43","hashOfConfig":"31"},{"size":3576,"mtime":1684433849459,"results":"44","hashOfConfig":"31"},{"size":4989,"mtime":1684603974489,"results":"45","hashOfConfig":"31"},{"size":1078,"mtime":1683311899901,"results":"46","hashOfConfig":"31"},{"size":1110,"mtime":1683656352939,"results":"47","hashOfConfig":"31"},{"size":738,"mtime":1684433239561,"results":"48","hashOfConfig":"31"},{"size":634,"mtime":1684433736885,"results":"49","hashOfConfig":"31"},{"size":143,"mtime":1684432612638,"results":"50","hashOfConfig":"31"},{"size":2771,"mtime":1683831069158,"results":"51","hashOfConfig":"31"},{"size":727,"mtime":1683745627869,"results":"52","hashOfConfig":"31"},{"size":551,"mtime":1684427438126,"results":"53","hashOfConfig":"31"},{"size":244,"mtime":1683817654157,"results":"54","hashOfConfig":"31"},{"size":200,"mtime":1684418988630,"results":"55","hashOfConfig":"31"},{"size":2692,"mtime":1684702926036,"results":"56","hashOfConfig":"31"},{"size":4022,"mtime":1684705597393,"results":"57","hashOfConfig":"31"},{"size":1330,"mtime":1684600497754,"results":"58","hashOfConfig":"31"},{"size":2428,"mtime":1684689671264,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},"jv93t6",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"64"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"64"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"64"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\index.js",["158"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './container/App';\n\nimport reportWebVitals from './reportWebVitals';\nimport \"./bootstrap-override.scss\";\nimport \"./i18n\"\n//import AuthenticationContext from './shared/AuthenticationContext';\nimport { Provider } from 'react-redux';\nimport { act } from 'react-dom/test-utils';\nimport configureStore from './redux/configureStore';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst store = configureStore();\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\UserSignupPage.js",["159","160","161","162","163","164"],[],"import React, { useState } from \"react\";\r\nimport {signup, changeLanguage, login} from \"../api/apiCalls\"\r\nimport Input from \"../components/input\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\r\nimport { withApiProgress } from \"../shared/ApiProgress\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginSuccess } from \"../redux/authActions\";\r\n\r\nconst UserSignupPage = (props) => {\r\n\r\n    //each class component must override render\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const [form, setForm] = useState({\r\n        username: null,\r\n        displayName: null,\r\n        password: null,\r\n        confirmPassword: null\r\n    });\r\n    \r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const onChange = (event) =>{\r\n\r\n        const {name, value} = event.target\r\n        //const name = event.target.name;\r\n        //const value = event.target.value;\r\n        const errorsCopy = {...errors}; // copy errors\r\n        errorsCopy[name] = undefined;\r\n\r\n        if(name == \"password\" || name == \"confirmPassword\"){\r\n            if(name == \"password\" && value !== form.confirmPassword){\r\n                errorsCopy.confirmPassword = t(\"Passwords do not match\")\r\n            }\r\n            else if(name == \"confirmPassword\" && value !== form.password){\r\n                errorsCopy.confirmPassword = t(\"Passwords do not match\")\r\n            }else{\r\n                errorsCopy.confirmPassword = undefined;\r\n            }\r\n        }\r\n        setErrors(errorsCopy);\r\n        \r\n        const formCopy = {...form};\r\n        formCopy[name] = value;\r\n\r\n        setForm(formCopy);\r\n    };\r\n\r\n\r\n    const onClickSignup = async event =>{\r\n        event.preventDefault()\r\n        \r\n        const body = {\r\n            \"username\": form.username,\r\n            \"displayName\": form.displayName,\r\n            \"password\": form.password\r\n        }\r\n\r\n        try {\r\n            const response = await signup(body)\r\n\r\n            const creds = {\r\n                username: body.username,\r\n                password: body.password\r\n            }\r\n\r\n            const loginResponse = await login(creds);\r\n\r\n            const authState = {\r\n                username: loginResponse.data.username,\r\n                displayName: loginResponse.data.displayName,\r\n                image: loginResponse.data.image,\r\n                password: body.password\r\n            }\r\n\r\n            dispatch(loginSuccess(authState))\r\n\r\n            props.history.push(\"/\")\r\n            \r\n        } catch (error) {\r\n            if(error.response.data.validationErrors != null){\r\n                setErrors(error.response.data.validationErrors)\r\n            }\r\n            console.log(error.response.data.validationErrors)            \r\n        }\r\n        \r\n        \r\n\r\n    };\r\n\r\n    const {t} = useTranslation();\r\n    const {pendingApiCall} = props;\r\n    return(\r\n        <div className=\"container\">\r\n            <form> \r\n                <h1 className=\"text-center\">{t(\"Sign up\")}</h1>\r\n                <Input type=\"text\" name=\"username\" label={t(\"Username\")} error ={errors.username} onChange={onChange} />\r\n                <Input type=\"text\" name=\"displayName\" label={t(\"Display Name\")} error ={errors.displayName} onChange={onChange} />\r\n                <Input type=\"password\" name=\"password\" label={t(\"Password\")} error ={errors.password} onChange={onChange} />\r\n                <Input type=\"password\" name=\"confirmPassword\" label={t(\"Confirm Password\")} error ={errors.confirmPassword} onChange={onChange} />\r\n                \r\n                {/*\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input type=\"text\" className={errors.username == null ? \"form-control\" : \"form-control is-invalid\"} name=\"username\" onChange={this.onChange}/>\r\n                    <div className=\"invalid-feedback\">\r\n                        {errors.username}\r\n                    </div>\r\n                </div>\r\n                */}\r\n                <ButtonWithProgress buttonText={t(\"Sign up\")} pendingApiCall={pendingApiCall} onClickMethod={onClickSignup} disabledStatement={pendingApiCall || errors.confirmPassword !== undefined}/>\r\n                \r\n            </form>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst UserSignupPageWithApiProgress = withApiProgress(UserSignupPage,\"post\",\"/api/1.0/users\")\r\n\r\nexport default UserSignupPageWithApiProgress;","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\api\\apiCalls.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\input.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\i18n.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\UserLoginPage.js",["165"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Input from \"../components/input\"\r\nimport { useTranslation } from \"react-i18next\"\r\nimport { login, setAuthorizationHeader } from \"../api/apiCalls\";\r\nimport ButtonWithProgress from \"../components/ButtonWithProgress\";\r\nimport { withApiProgress } from \"../shared/ApiProgress\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loginSuccess } from \"../redux/authActions\";\r\n//import { Authentication } from \"../shared/AuthenticationContext\";\r\n\r\n\r\nconst UserLoginPage = (props) => {\r\n\r\n    const [username, setUsername] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [error,  setError] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // a hook function that will be executed if any effects occurs on the spesificed fields\r\n    useEffect(() => {\r\n        setError(undefined)\r\n    }, [username, password])\r\n\r\n    const onClickLogin = async event =>{\r\n\r\n        setError(undefined)\r\n\r\n        event.preventDefault();\r\n\r\n        const creds = {\r\n            username: username,\r\n            password: password\r\n        }\r\n\r\n        try {\r\n            const response = await login(creds);\r\n            props.history.push(\"/\");\r\n\r\n            const authState = {\r\n                username: response.data.username,\r\n                displayName: response.data.displayName,\r\n                image: response.data.image,\r\n                password: password\r\n            }\r\n            \r\n            dispatch(loginSuccess(authState))\r\n\r\n        } catch (error) {\r\n            setError(error.response.data.message)\r\n        }\r\n    }\r\n    \r\n    const {t} = useTranslation();\r\n    const {pendingApiCall } = props\r\n    return(\r\n        <div className=\"container\">\r\n            <form>\r\n                <h1 className=\"text-center\">{t(\"Login\")}</h1>\r\n                <Input type=\"text\" name=\"username\" label={t(\"Username\")} onChange={(event) => {setUsername(event.target.value)}} />\r\n                <Input type=\"password\" name=\"password\" label={t(\"Password\")} onChange={(event) => {setPassword(event.target.value)}}/>\r\n                \r\n                {/*  ? excepts : but && doesn't except any else conditions\r\n                \r\n                    i could also use &&. In that case if this.state.error existed, it would\r\n                    write the message but else it wouldn't render anything\r\n                \r\n                */}\r\n\r\n                {error ? \r\n                <div className=\"alert alert-danger mt-3\">\r\n                {error}\r\n                </div>\r\n                :\r\n                <div></div>\r\n                }\r\n{/*                     <button className=\"btn btn-primary\" disabled={!username || !password || pendingApiCall} onClick={this.onClickLogin}>\r\n                    {pendingApiCall &&\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>                    \r\n                    }\r\n                    {t(\"Login\")}\r\n                </button>*/}        \r\n\r\n                <ButtonWithProgress buttonText={t(\"Login\")} onClickMethod={onClickLogin} pendingApiCall={pendingApiCall} disabledStatement={!username || !password || pendingApiCall} />\r\n                        \r\n                </form>\r\n        </div>\r\n        \r\n    )\r\n\r\n}\r\n\r\nconst LoginPageWithApiProgress = withApiProgress(UserLoginPage,\"post\",\"/api/1.0/auth\");\r\n\r\nexport default LoginPageWithApiProgress;","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\LanguageSelector.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\ButtonWithProgress.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\shared\\ApiProgress.js",["166"],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\container\\App.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\HomePage.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\pages\\UserPage.js",["167","168"],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\TopBar.js",["169","170"],[],"import logo from \"../assets/hoaxify.png\";\r\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\nimport { useTranslation} from 'react-i18next';\r\n//import { Authentication } from '../shared/AuthenticationContext';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logoutSuccess } from '../redux/authActions';\r\nimport { clearAuthorizationHeader } from \"../api/apiCalls\";\r\nimport DropdownMenu from \"./DropdownMenu\";\r\nimport ProfileImageWithDefault from \"./ProfileImageWithDefault\";\r\nimport { useState } from \"react\";\r\n\r\nconst TopBar = (props) => {\r\n\r\n    const [menuVisible,setMenuVisible] = useState(false);\r\n    const {t} = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const { isLoggedIn, username, displayName, image} = useSelector((store) => {\r\n        return {\r\n            isLoggedIn: store.isLoggedIn,\r\n            username: store.username,\r\n            displayName: store.displayName,\r\n            image: store.image\r\n        };\r\n    });\r\n\r\n    const onClickLogout = () => {\r\n        dispatch(logoutSuccess())\r\n        clearAuthorizationHeader();\r\n        setMenuVisible(false)\r\n    }\r\n\r\n    const onClickMyProfile = () => {\r\n        setMenuVisible(false);\r\n    }\r\n    \r\n    //const cannot be reassigned once assigned\r\n    //we should use let\r\n    let links = (\r\n        <ul className='navbar-nav ms-auto'>\r\n        <li className='text-white'>\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n            {t(\"Login\")}\r\n            </Link>\r\n        </li>\r\n        <li className='text-white'>\r\n            <Link className=\"nav-link me-5\" to=\"/signup\">\r\n            {t(\"Sign up\")}\r\n            </Link>\r\n        </li>\r\n    </ul>\r\n    );\r\n\r\n    if (isLoggedIn) {\r\n        links = (\r\n        <ul className='navbar-nav ms-auto'>\r\n            <li className=\"nav-item dropdown\">\r\n                <div className=\"d-flex align-items-center\" style={{cursor: \"pointer\"}} onClick={() => {setMenuVisible(!menuVisible)}}>\r\n                    <ProfileImageWithDefault image={image} width=\"32\" height=\"32\" />\r\n                    <span className='nav-link text-white dropdown-toggle me-5'>{displayName}</span>\r\n                </div>\r\n                <div className={menuVisible ? \"dropdown-menu show shadow p-0\" : \"dropdown-menu shadow p-0\"}>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <span class=\"material-symbols-outlined\">\r\n                        person\r\n                        </span>\r\n                        <Link className=\"dropdown-item\" to={\"/user/\" + username} onClick={onClickMyProfile}>\r\n                        {t(\"My Profile\")}\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center\">\r\n                        <span class=\"material-symbols-outlined text-danger\">\r\n                        logout\r\n                        </span>\r\n                        <Link className=\"dropdown-item me-5\" to=\"/login\" onClick={onClickLogout}>\r\n                        {t(\"Logout\")}\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </li>\r\n        </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className='bg-light mb-2'>\r\n            <nav className=\"navbar navbar-dark navbar-expand bg-primary shadow\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img src={logo} width=\"60\"/>\r\n                    Hoaxify\r\n                </Link>\r\n\r\n                {links}\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default TopBar;","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\ProfileCard.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\shared\\AuthenticationContext.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\configureStore.js",["171"],[],"import { legacy_createStore as createStore } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport SecureLS from 'secure-ls';\r\nimport { setAuthorizationHeader } from '../api/apiCalls';\r\n\r\nconst secureLS = new SecureLS();\r\n\r\nconst getStateFromStorage = () => {\r\n\r\n  const localAuthData = secureLS.get(\"auth\");\r\n\r\n  let stateInLocalStorage = {\r\n    isLoggedIn: false,\r\n    username: undefined,\r\n    displayName: undefined,\r\n    image: undefined,\r\n    password: undefined\r\n  }\r\n\r\n  if(localAuthData){\r\n    return localAuthData;\r\n  }\r\n}\r\n\r\nconst updateStateInStorage = (newState) => {\r\n\r\n  secureLS.set(\"auth\",newState);\r\n\r\n}\r\n  \r\nconst configureStore = () => {\r\n\r\n  const stateInLocalStorage = getStateFromStorage();\r\n\r\n  const store = createStore(authReducer, stateInLocalStorage,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());  \r\n\r\n  // each time the state changes, this method will run\r\n  store.subscribe(() => {\r\n    updateStateInStorage(store.getState());\r\n    setAuthorizationHeader(store.getState());\r\n\r\n  })\r\n\r\n  return store; \r\n}\r\n\r\nexport default configureStore;","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\authReducer.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\authActions.js",["172"],[],"import { login } from \"../api/apiCalls\";\r\nimport * as ACTIONS from \"../redux/Constants\" \r\n\r\nexport const logoutSuccess = () => {\r\n    const action = {\r\n        type: ACTIONS.LOGOUT_SUCCESS\r\n    };\r\n\r\n    return action;\r\n}\r\n\r\nexport const loginSuccess = (authState) => {\r\n    const action = {\r\n        type: ACTIONS.LOGIN_SUCCESS,\r\n        data: authState\r\n    }\r\n\r\n    return action;\r\n}\r\n\r\nexport const updateSuccess = ({displayName, image}) => {\r\n    const action = {\r\n        type: ACTIONS.UPDATE_SUCCESS,\r\n        data: {\r\n            displayName: displayName,\r\n            image: image\r\n        }\r\n    }\r\n\r\n    return action;\r\n}\r\n","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\redux\\Constants.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\UserList.js",["173"],[],"import React, { useEffect, useState } from 'react'\r\nimport { getUsers } from '../api/apiCalls'\r\nimport { useTranslation } from 'react-i18next'\r\nimport UserListItem from './UserListItem'\r\nimport { withApiProgress } from '../shared/ApiProgress'\r\nimport Spinner from './Spinner'\r\n\r\nconst UserList=(props) => {\r\n\r\n    const {t} = useTranslation();\r\n    const [page, setPage] = useState({\r\n        content: [],\r\n        size: 3,\r\n        number: 0,\r\n        totalPages: 0\r\n    });\r\n\r\n    const [loadFailure,setLoadFailure] = useState(false);\r\n\r\n    const loadUsers = async (pageNumber) => {\r\n        setLoadFailure(false);\r\n        try {\r\n            const response = await getUsers(pageNumber);\r\n            setPage(response.data)\r\n        } catch (error) {\r\n            setLoadFailure(true);\r\n        }\r\n    }\r\n\r\n    // if you give an empty error, it will act like componentdidmount\r\n    useEffect(() => {\r\n        loadUsers();\r\n    }, [])\r\n\r\n    const onClickNext = () => {\r\n        const nextPage = page.number + 1;\r\n        loadUsers(nextPage);\r\n    }\r\n\r\n    const onClickPrevious = () => {\r\n        const previousPage = page.number - 1;\r\n        loadUsers(previousPage);\r\n    }\r\n    \r\n    const onClickRaquo = () => {\r\n        const lastPage = page.totalPages - 1;\r\n        loadUsers(lastPage)\r\n    }\r\n\r\n    const onClickLaquo = () => {\r\n        const firstPage = 0;\r\n        loadUsers(0);\r\n    }\r\n\r\n    const {content: users, last, first} = page;\r\n    const {pendingApiCall} = props\r\n    return (\r\n    <div>\r\n        <div className='card'>\r\n            <h3 className='card-header text-center'>{t(\"Users\")}</h3>\r\n            {!pendingApiCall ?\r\n            <ul className=\"list-group\">\r\n            {users.map((user,index) => {\r\n                return (\r\n                    <UserListItem key={user.username} user={user} />\r\n                )\r\n            })}\r\n            </ul> \r\n            :\r\n            <Spinner />\r\n            }\r\n\r\n            {loadFailure && <div className='text-center text-danger'> {t(\"Failure\")} </div>}\r\n\r\n            <div>\r\n                <button type='button' className='btn btn-light float-end' onClick={onClickRaquo} disabled={last || pendingApiCall}>&raquo;</button>\r\n                <button type='button' className='btn btn-light float-end' onClick={onClickNext} disabled={last || pendingApiCall}>{t(\"Next\")}</button>\r\n                <button type='button' className='btn btn-light' onClick={onClickLaquo} disabled={first || pendingApiCall} >&laquo;</button>\r\n                <button type='button' className='btn btn-light' onClick={onClickPrevious} disabled={first || pendingApiCall}>{t(\"Previous\")}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withApiProgress(UserList, \"get\",\"/api/1.0/users\");","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\UserListItem.js",["174"],[],"import React from 'react';\r\nimport { Link } from \"react-router-dom\"\r\nimport ProfileImageWithDefault from './ProfileImageWithDefault';\r\nconst UserListItem = (props) => {\r\n    const {user} = props;\r\n    const {username,displayName,image} = user\r\n\r\n    const {pendingApiCall} = props;\r\n    return (\r\n        <div>\r\n            <li class=\"list-group-item list-group-item-action\">\r\n                <Link className=\"nav-link\" to={\"/user/\" + username}>\r\n                <ProfileImageWithDefault image={image} width=\"25\" />\r\n                <span className='ms-2'>\r\n                {displayName}@{username}\r\n                </span>\r\n                </Link>\r\n            </li>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserListItem;","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\ProfileImageWithDefault.js",["175"],[],"import React from 'react';\r\nimport defaultProfileLogo from \"../assets/profile.png\"\r\n\r\n\r\nconst ProfileImageWithDefault = (props) => {\r\n    \r\n    const {image, width, tempImage, height} = props\r\n\r\n    let imageSource = defaultProfileLogo;\r\n\r\n    if(image){\r\n        imageSource = \"/images/\" + image;\r\n    }\r\n    \r\n    return (\r\n        <img className='rounded-circle shadow' src={tempImage || imageSource} width={width} height={height} onError={(event) => {event.target.src=defaultProfileLogo}}/>\r\n    );\r\n};\r\n\r\n\r\nexport default ProfileImageWithDefault;","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\Spinner.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\DropdownMenu.js",["176"],[],"import React from 'react';\r\n\r\nconst DropdownMenu = (props) => {\r\n\r\n    const {title} = props;\r\n\r\n    return (\r\n\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DropdownMenu;","C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxifySection.js",["177"],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxFeed.js",["178"],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxListItem.js",[],[],"C:\\Users\\90538\\Desktop\\spring-react-course\\frontend\\src\\components\\HoaxFeedForProfile.js",["179"],[],{"ruleId":"180","severity":1,"message":"181","line":11,"column":10,"nodeType":"182","messageId":"183","endLine":11,"endColumn":13},{"ruleId":"180","severity":1,"message":"184","line":2,"column":17,"nodeType":"182","messageId":"183","endLine":2,"endColumn":31},{"ruleId":"185","severity":1,"message":"186","line":34,"column":17,"nodeType":"187","messageId":"188","endLine":34,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":34,"column":39,"nodeType":"187","messageId":"188","endLine":34,"endColumn":41},{"ruleId":"185","severity":1,"message":"186","line":35,"column":21,"nodeType":"187","messageId":"188","endLine":35,"endColumn":23},{"ruleId":"185","severity":1,"message":"186","line":38,"column":26,"nodeType":"187","messageId":"188","endLine":38,"endColumn":28},{"ruleId":"180","severity":1,"message":"189","line":63,"column":19,"nodeType":"182","messageId":"183","endLine":63,"endColumn":27},{"ruleId":"180","severity":1,"message":"190","line":4,"column":17,"nodeType":"182","messageId":"183","endLine":4,"endColumn":39},{"ruleId":"191","severity":1,"message":"192","line":49,"column":7,"nodeType":"193","endLine":49,"endColumn":27,"suggestions":"194"},{"ruleId":"180","severity":1,"message":"195","line":5,"column":26,"nodeType":"182","messageId":"183","endLine":5,"endColumn":41},{"ruleId":"191","severity":1,"message":"196","line":31,"column":8,"nodeType":"193","endLine":31,"endColumn":18,"suggestions":"197"},{"ruleId":"180","severity":1,"message":"198","line":8,"column":8,"nodeType":"182","messageId":"183","endLine":8,"endColumn":20},{"ruleId":"199","severity":1,"message":"200","line":89,"column":21,"nodeType":"201","endLine":89,"endColumn":49},{"ruleId":"180","severity":1,"message":"202","line":12,"column":7,"nodeType":"182","messageId":"183","endLine":12,"endColumn":26},{"ruleId":"180","severity":1,"message":"203","line":1,"column":10,"nodeType":"182","messageId":"183","endLine":1,"endColumn":15},{"ruleId":"180","severity":1,"message":"204","line":51,"column":15,"nodeType":"182","messageId":"183","endLine":51,"endColumn":24},{"ruleId":"180","severity":1,"message":"205","line":8,"column":12,"nodeType":"182","messageId":"183","endLine":8,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":16,"column":9,"nodeType":"201","endLine":16,"endColumn":169},{"ruleId":"180","severity":1,"message":"206","line":5,"column":12,"nodeType":"182","messageId":"183","endLine":5,"endColumn":17},{"ruleId":"180","severity":1,"message":"189","line":41,"column":19,"nodeType":"182","messageId":"183","endLine":41,"endColumn":27},{"ruleId":"191","severity":1,"message":"207","line":44,"column":7,"nodeType":"193","endLine":44,"endColumn":30,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"209","line":24,"column":7,"nodeType":"193","endLine":24,"endColumn":9,"suggestions":"210"},"no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","'changeLanguage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'response' is assigned a value but never used.","'setAuthorizationHeader' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'strictPath'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'withApiProgress' is defined but never used.","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.",["212"],"'DropdownMenu' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'stateInLocalStorage' is assigned a value but never used.","'login' is defined but never used.","'firstPage' is assigned a value but never used.","'pendingApiCall' is assigned a value but never used.","'title' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCount'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'loadHoaxes'. Either include it or remove the dependency array.",["214"],{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [apiPath, apiMethod, strictPath]",{"range":"223","text":"224"},"Update the dependencies array to be: [loadUser, username]",{"range":"225","text":"226"},"Update the dependencies array to be: [contentFirstElementId, getCount]",{"range":"227","text":"228"},"Update the dependencies array to be: [loadHoaxes]",{"range":"229","text":"230"},[1693,1713],"[apiPath, apiMethod, strictPath]",[1016,1026],"[loadUser, username]",[1273,1296],"[contentFirstElementId, getCount]",[796,798],"[loadHoaxes]"]